#!/bin/bash
clear
cd
echo "connecting..."

echo "clear"

echo "connecting..."
clear                    	        
function create_user() {
	read -p "Enter username: " uname
	read -p "Enter Date for username[$uname] : " Pass
	read -p "Expired (Days): " Date

	IP=`dig +short myip.opendns.com @resolver1.opendns.com`
	useradd -e `date -d "$Date days" +"%Y-%m-%d"` -s /bin/false -M $uname
	exp="$(chage -l $uname | grep "Account expires" | awk -F": " '{print $2}')"
	echo -e "$Pass\n$Pass\n"|passwd $uname &> /dev/null
	echo -e ""
	echo -e "======Account Information======"
	echo -e "Username: $uname "
	echo -e "Password: $Pass"
	echo -e "-------------------------------"
	echo -e "Expired Date: $exp"
	echo -e "==============================="
	echo -e ""
	echo -e "Type (menu) to back menu option."
	echo -e ""
	echo "Thank you! Please type "menu" to back."
}
function generate_trial() {
IP=`dig +short myip.opendns.com @resolver1.opendns.com`

uname=trial`</dev/urandom tr -dc X-Z0-9 | head -c4`
hari=".02"
pass=`</dev/urandom tr -dc a-f0-9 | head -c9`

useradd -e `date -d "$hari days" +"%Y-%m-%d"` -s /bin/false -M $uname
echo -e "$pass\n$pass\n"|passwd $uname &> /dev/null
echo -e ""
echo -e "====Trial account info.===="
echo -e "Username: $uname"
echo -e "Password: $pass\n"
echo -e "==========================="
echo -e ""
echo -e "Type (menu) to back."
echo -e ""
}
function renew_user() {

	usermod -e $uname $expdate
	echo -e "====New expiration date for:===="
	echo -e "Username: $uname"
	echo -e "Expiration Date: $expdate\n"
	echo -e "================================"
	echo ""
	echo "Thank you! Please type "menu" to back."
}

function delete_user(){
	userdel $uname
	
	echo ""
	echo "Thank you! Please type "menu" to back."
}

function expired_users(){
	cat /etc/shadow | cut -d: -f1,8 | sed /:$/d > /tmp/expirelist.txt
	totalaccounts=`cat /tmp/expirelist.txt | wc -l`
	for((i=1; i<=$totalaccounts; i++ )); do
		tuserval=`head -n $i /tmp/expirelist.txt | tail -n 1`
		username=`echo $tuserval | cut -f1 -d:`
		userexp=`echo $tuserval | cut -f2 -d:`
		userexpireinseconds=$(( $userexp * 86400 ))
		todaystime=`date +%s`
		if [ $userexpireinseconds -lt $todaystime ] ; then
			echo $username
		fi
	done
	rm /tmp/expirelist.txt
	
	echo ""
	echo "Thank you! Please type "menu" to back."
}

function not_expired_users(){
    cat /etc/shadow | cut -d: -f1,8 | sed /:$/d > /tmp/expirelist.txt
    totalaccounts=`cat /tmp/expirelist.txt | wc -l`
    for((i=1; i<=$totalaccounts; i++ )); do
        tuserval=`head -n $i /tmp/expirelist.txt | tail -n 1`
        username=`echo $tuserval | cut -f1 -d:`
        userexp=`echo $tuserval | cut -f2 -d:`
        userexpireinseconds=$(( $userexp * 86400 ))
        todaystime=`date +%s`
        if [ $userexpireinseconds -gt $todaystime ] ; then
            echo $username
        fi
    done
    	echo ""
	echo "Thank you! Please type "menu" to back."
	rm /tmp/expirelist.txt
	
	
}

function used_data(){
	myip=`ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0' | head -n1`
	myint=`ifconfig | grep -B1 "inet addr:$myip" | head -n1 | awk '{print $1}'`
	ifconfig $myint | grep "RX bytes" | sed -e 's/ *RX [a-z:0-9]*/Received: /g' | sed -e 's/TX [a-z:0-9]*/\nTransfered: /g'
	
	echo ""
	echo "Thank you! Please type "menu" to back."
}

clear
screenfetch                       		
echo "----------------------------------------------------------"

echo "----------- Welcom Jelson Barrozo Autoscript -------------"
echo ""
PS3='Please enter your choice: '
options=("Add User" "generate_trial" "Renew User" "Delete User" "Current Connected Users" "User List" "Ram Status" "Users Not Expired" "Expired Users" "Used Data By Users" "Quit")
select opt in "${options[@]}"
do
    case $opt in
        "Add User")
            #read -p "Enter username: " uname
            #read -p "Enter Password for username[$uname]: " pass
            #read -p "Enter Date for username[$uname](YYYY:MM:DD): " expdate
	    
	    create_user
	    break
            ;;
        "generate_trial")
	      generate_trial
	      break
	      ;;   
        "Renew User")
            read -p "Enter username to renew: " uname
            read -p "Enter Date extend for username[$uname](YYYY:MM:DD): " expdate
	    
	    renew_user
            break
            ;;
        "Delete User")
	    /root/status
            read -p "Enter username to be removed: " uname
            delete_user
            break
            ;;
		"Current Connected Users")
            who -T | tr -s ' ' | cut -d ' ' -f 1-2 | sort -u
            break
            ;;		
		"User List")
            /root/status
            break
            ;;	
		"Ram Status")
		    free -h | grep -v + > /tmp/ramcache
            cat /tmp/ramcache | grep -v "Swap"
            break
            ;;	
		"Users Not Expired")
			not_expired_users
			break
			;;
		"Expired Users")
			expired_users
			break
			;;
		"Used Data By Users")
			used_data
			break
			;;
        "Quit")
            break
            ;;
        *) echo invalid option;;
    esac
done
